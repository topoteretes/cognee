name: Test Suites

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
    types: [opened, synchronize, reopened, labeled]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  RUNTIME__LOG_LEVEL: ERROR
  ENV: 'dev'

jobs:
  basic-tests:
    name: Basic Tests
    uses: ./.github/workflows/reusable_basic_tests.yml
    secrets:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GRAPHISTRY_USERNAME: ${{ secrets.GRAPHISTRY_USERNAME }}
      GRAPHISTRY_PASSWORD: ${{ secrets.GRAPHISTRY_PASSWORD }}

  integration-tests:
    name: Integration Tests
    needs: basic-tests
    uses: ./.github/workflows/reusable_integration_tests.yml
    secrets:
      LLM_MODEL: ${{ secrets.LLM_MODEL }}
      LLM_ENDPOINT: ${{ secrets.LLM_ENDPOINT }}
      LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
      LLM_API_VERSION: ${{ secrets.LLM_API_VERSION }}
      EMBEDDING_MODEL: ${{ secrets.EMBEDDING_MODEL }}
      EMBEDDING_ENDPOINT: ${{ secrets.EMBEDDING_ENDPOINT }}
      EMBEDDING_API_KEY: ${{ secrets.EMBEDDING_API_KEY }}
      EMBEDDING_API_VERSION: ${{ secrets.EMBEDDING_API_VERSION }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GRAPHISTRY_USERNAME: ${{ secrets.GRAPHISTRY_USERNAME }}
      GRAPHISTRY_PASSWORD: ${{ secrets.GRAPHISTRY_PASSWORD }}

  database-postgres-tests:
    name: PostgreSQL Tests
    needs: integration-tests
    uses: ./.github/workflows/reusable_database_tests.yml
    with:
      database-type: 'postgres'
    secrets:
      LLM_MODEL: ${{ secrets.LLM_MODEL }}
      LLM_ENDPOINT: ${{ secrets.LLM_ENDPOINT }}
      LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
      LLM_API_VERSION: ${{ secrets.LLM_API_VERSION }}
      EMBEDDING_MODEL: ${{ secrets.EMBEDDING_MODEL }}
      EMBEDDING_ENDPOINT: ${{ secrets.EMBEDDING_ENDPOINT }}
      EMBEDDING_API_KEY: ${{ secrets.EMBEDDING_API_KEY }}
      EMBEDDING_API_VERSION: ${{ secrets.EMBEDDING_API_VERSION }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

  database-neo4j-tests:
    name: Neo4j Tests
    needs: integration-tests
    uses: ./.github/workflows/reusable_database_tests.yml
    with:
      database-type: 'neo4j'
    secrets:
      LLM_MODEL: ${{ secrets.LLM_MODEL }}
      LLM_ENDPOINT: ${{ secrets.LLM_ENDPOINT }}
      LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
      LLM_API_VERSION: ${{ secrets.LLM_API_VERSION }}
      EMBEDDING_MODEL: ${{ secrets.EMBEDDING_MODEL }}
      EMBEDDING_ENDPOINT: ${{ secrets.EMBEDDING_ENDPOINT }}
      EMBEDDING_API_KEY: ${{ secrets.EMBEDDING_API_KEY }}
      EMBEDDING_API_VERSION: ${{ secrets.EMBEDDING_API_VERSION }}

  ollama-tests:
    name: Ollama Tests
    needs: integration-tests
    uses: ./.github/workflows/reusable_ollama_tests.yml
    secrets:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GRAPHISTRY_USERNAME: ${{ secrets.GRAPHISTRY_USERNAME }}
      GRAPHISTRY_PASSWORD: ${{ secrets.GRAPHISTRY_PASSWORD }}

  notebook-tests:
    name: Notebook Tests
    needs: integration-tests
    uses: ./.github/workflows/reusable_notebooks_tests.yml
    secrets: inherit

  python-version-tests:
    name: Python Version Tests
    needs: integration-tests
    uses: ./.github/workflows/reusable_python_version_tests.yml
    secrets:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GRAPHISTRY_USERNAME: ${{ secrets.GRAPHISTRY_USERNAME }}
      GRAPHISTRY_PASSWORD: ${{ secrets.GRAPHISTRY_PASSWORD }}

  # Matrix-based vector database tests
  vector-db-tests:
    name: Vector DB Tests
    needs: integration-tests
    uses: ./.github/workflows/reusable_vector_db_tests.yml
    secrets: inherit

  # Matrix-based example tests
  example-tests:
    name: Example Tests
    needs: integration-tests
    uses: ./.github/workflows/reusable_examples_tests.yml
    secrets: inherit

  # Additional LLM tests
  gemini-tests:
    name: Gemini Tests
    needs: integration-tests
    uses: ./.github/workflows/test_gemini.yml
    secrets: inherit

  notify:
    name: Test Completion Status
    needs: [
      basic-tests, 
      integration-tests, 
      database-postgres-tests, 
      database-neo4j-tests, 
      ollama-tests, 
      notebook-tests, 
      python-version-tests,
      vector-db-tests,
      example-tests,
      gemini-tests
    ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check Status
        run: |
          if [[ "${{ needs.basic-tests.result }}" == "success" && 
                "${{ needs.integration-tests.result }}" == "success" && 
                "${{ needs.database-postgres-tests.result }}" == "success" && 
                "${{ needs.database-neo4j-tests.result }}" == "success" && 
                "${{ needs.ollama-tests.result }}" == "success" &&
                "${{ needs.notebook-tests.result }}" == "success" &&
                "${{ needs.python-version-tests.result }}" == "success" &&
                "${{ needs.vector-db-tests.result }}" == "success" &&
                "${{ needs.example-tests.result }}" == "success" &&
                "${{ needs.gemini-tests.result }}" == "success" ]]; then
            echo "All test suites completed successfully!"
          else
            echo "One or more test suites failed."
            exit 1
          fi 