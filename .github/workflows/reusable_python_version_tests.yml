name: Reusable Python Version Tests

on:
  workflow_call:
    inputs:
      python-versions:
        required: false
        type: string
        default: '["3.10.x", "3.11.x", "3.12.x"]'
    secrets:
      OPENAI_API_KEY:
        required: true
      GRAPHISTRY_USERNAME:
        required: true
      GRAPHISTRY_PASSWORD:
        required: true

jobs:
  run-python-version-tests:
    name: Python ${{ matrix.python-version }} Tests
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ${{ fromJSON(inputs.python-versions) }}
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install Poetry
        uses: snok/install-poetry@v1.4.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --all-extras
          
      - name: Run Basic Examples
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LLM_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GRAPHISTRY_USERNAME: ${{ secrets.GRAPHISTRY_USERNAME }}
          GRAPHISTRY_PASSWORD: ${{ secrets.GRAPHISTRY_PASSWORD }}
        run: poetry run python ./examples/python/simple_example.py 